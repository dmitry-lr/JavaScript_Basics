// Почему код дает именно такие результаты?
// var a = 1, b = 1, c, d;
// c = ++a; alert(c);           // 2
// d = b++; alert(d);           // 1
// c = (2+ ++a); alert(c);      // 5
// d = (2+ b++); alert(d);      // 4
// alert(a);                    // 3
// alert(b);                    // 3

// c = ++a; alert(c);           // 2 - 
//Первоначальное значение переменной a=1, 
//при операции преинкремента сначала происходит увеличение переменной, затем присваивание,
//поэтому переменной с присваивается уже увеличенное на 1 значение переменной а, т.е 2.

// d = b++; alert(d);           // 1 -
//Первоначальное значение переменной b=1, 
//при операции пocтинкремента сначала происходит присваивание переменной, а только затем увеличение,
//поэтому переменной d присваивается еще неувеличенное значение переменной b, т.е 1.

// c = (2+ ++a); alert(c);      // 5 -
// Первоначальное значение переменной a=2 (после использования преинкремента в выражении выше).
// Для переменной а снова применяется преинкремент, значит мы снова получаем увеличение значения переменной на 1,
// т.е. 3, которое затем складывается со значением 2. В итоге получае 2 + 3 = 5.

// d = (2+ b++); alert(d);      // 4
// Первоначальное значение переменной b=2 (после использования постинкремента в выражении выше).
// Для переменной b снова применяется постинкремент, значит мы снова получаем ситуацию, в которой 
// используется значение переменной, а только потом происходит ее увеличение на 1.
// Т.е для сложения используем значение b=2. В итоге получае 2 + 2 = 4.

// alert(a);                    // 3 
// После двух преинкрементов значение переменной a равно 1+1+1 = 3

// alert(b);                    // 3
// После двух постнкрементов значение переменной b также равно 1+1+1 = 3
